- title: Applying the Cascaded Finite State Grammar Induction Model to Trading Card Game Corpora
  company: CMSC 473 Intro to NLP Class @ UMBC
  position: 
  place:
  start-time: Fall 2020
  end-time: 
  responsibilities:
    - description: Proposed the original idea for <a href="/media/documents/grammar_induction_tcg_cmsc_473_group_final_project.pdf">this final group project</a>.
    - description: Implemented–with a group of 3 peers–a <span class="tool-secondary">Grammar Induction</span> algorithm in <span class="tool-primary">Python</span> from an academic paper that uses a cascaded chunking algorithm with <span class="tool-secondary">HMMs</span>.
    - description: >
        We analyzed model performance using perplexity, and we applied it to Trading Card Games like <i>Magic: the Gathering</i>, <i>Yu-Gi-Oh!</i> and others.

- title: Linux Chess Kernel Modules
  company: CMSC 421 Operating Systems class @ UMBC
  position: 
  place:
  start-time: Spring 2020
  end-time:
  responsibilities:
    - description: Implemented the device module in the <span class="tool-primary">C</span> programming language to store and manage chess game state across multiple file pointers; with the option to play against an AI opponent using the min-max with alpha-beta pruning algorithm.
    - description: Only student out of the three sections of the course to complete all the extra credit and be eligible for the course-wide tournament.
    - description: <span class="tool-primary">Git</span> version control was required for this class to track incremental changes.

- title: Other Note-Worthy Classes from UMBC
  position: 
  place:
  start-time: 2018
  end-time: 2019
  responsibilities:
    - description: <i>Computer Graphics</i> (Spring 2020) Implemented <span class="tool-secondary">ray-tracing</span> algorithm in <span class="tool-primary">C++</span>. Used shaders and GLEW and GLSL to push vertices to the render pipeline. We used <span class="tool-primary">Git</span> version control to track progress.
    - description: <i>Graphics for Games</i> (Fall 2020). Gained more experience navigating a large codebase, namely the <span class="tool-primary">Unreal Engine C++</span> source. Projects focused on implementing graphics algorithms as Blueprints, Plugins, and Engine modifications.
